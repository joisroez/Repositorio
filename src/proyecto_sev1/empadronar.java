package proyecto_sev1;
import clases.*;
import java.awt.event.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.io.*;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class empadronar extends JFrameConFondo {
    /** Creates new form empadronar */
    public empadronar() throws FileNotFoundException, IOException {
        initComponents();
        //codigo de grupo de radiobutton para que se desmarque el radiobutton cada vez que selecciona el otro
        GRUPO1.add(M);//para genero masculino del grupo de radiobutton
        GRUPO1.add(F);//para genero femenino del grupo de radiobutton
        setLocationRelativeTo(null);// para que la ventana este siempre centrada
        GCodigo(); //llama al metodo de generar codigo
        setImagen("Recursos/bandera.jpg");//codigo para imagen en Panel
        Reloj modelo = new Reloj();//codigo para crear objeto de clase Reloj
        modelo.addObserver(new Observer() {

            public void update(Observable unObservable, Object dato) {
                jLbl_reloj.setText("" + dato);//codigo para mostrar reloj
            }
        });
         actualizar_tabla();
        String Provincias[] = {"Azuay", "Bolívar", "Cañar", "Carchi", "Chimborazo",
            "Cotopaxi", "El_Oro", "Esmeraldas", "Galápagos",
            "Guayas", "Imbabura", "Loja", "Los_Ríos", "Manabí", "Morona_Santiago",
            "Napo", "Orellana", "Pastaza", "Pichincha", "Santa_Elena",
            "Sto._Domingo_de_los_Tsachilas", "Sucumbíos", "Tungurahua",
            "Zamora_Chinchipe"};//vector para guardar provincias del Ecuador
        for (int i = 0; i < 24; i++) {//para añadir las provincias en jCmbBx_lugar_nacimiento
            jCmbBx_lugar_nacimiento.addItem(Provincias[i]);//muestra en jCmbBx_lugar_nacimiento las provincias de Ecuador
        }
    }
    String ECivil[]={"Solter@","Viud@","Casad@","Divorciad@","Uniòn_Libre"};//genera estado civil para empadronar
    
   
    //Metodo para añadir ceros a codigo de clase GenerarCodigo
    private void GCodigo() {
        GenerarCodigo gcod = new GenerarCodigo("empa.txt");//codigo para crear objeto de clase GenerarCodigo
        int cod = gcod.contarElementos();//llama metodo contarElementos() clase GenerarCodigo y guarda en cod
        String salida = "";//inicializa la salida de codigo
        if (cod < 10) { // si cod < 10 añade 4 ceros
            salida = "0000" + cod; //guarda los 4 ceros + el codigo en salida
        }
        if (cod >= 10 && cod < 100) {// si cod >=10 y cod < 100 añade 3 ceros
            salida = "000" + cod;//guarda los 3 ceros + el codigo en salida
        }
        if (cod >= 100 && cod < 1000) {// si cod >=100 y cod < 1000 añade 2 ceros
            salida = "00" + cod;//guarda los 2 ceros + el codigo en salida
        }
        if (cod >= 1000 && cod < 10000) {// si cod >=1000 y cod < 10000 añade 1 ceros
            salida = "0" + cod;//guarda los 1 ceros + el codigo en salida
        }
        if (cod >= 10000 && cod < 100000) {// si cod >=10000 y cod < 100000 no añade ceros
            salida = "" + cod;// guarda el codigo en salida
        }
        jTxFld_codigo.setText(salida);//muestra el codigo guardado en salida en el jTxFld_codigo
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        GRUPO1 = new javax.swing.ButtonGroup();
        jLbl_titulo_RegistrarDatos = new javax.swing.JLabel();
        jLbl_nombres = new javax.swing.JLabel();
        jLbl_apellidos = new javax.swing.JLabel();
        jLbl_CI = new javax.swing.JLabel();
        jLbl_lugarNacimiento = new javax.swing.JLabel();
        jLbl_fechaNacimiento = new javax.swing.JLabel();
        jLbl_estadoCivil = new javax.swing.JLabel();
        jLbl_dirección = new javax.swing.JLabel();
        jLbl_nacionalidad = new javax.swing.JLabel();
        jLbl_sexo = new javax.swing.JLabel();
        jTxFld_nombre = new javax.swing.JTextField();
        jTxFld_apellido = new javax.swing.JTextField();
        jTxFld_CI = new javax.swing.JTextField();
        jTxFld_dirección = new javax.swing.JTextField();
        jTxFld_nacionalidad = new javax.swing.JTextField();
        jCmbBx_lugar_nacimiento = new javax.swing.JComboBox();
        jCmbBx_estado_civil = new javax.swing.JComboBox();
        jCmbBx_año_nacimiento = new javax.swing.JComboBox();
        jCmbBx_mes_nacimiento = new javax.swing.JComboBox();
        jCmbBx_dia_nacimiento = new javax.swing.JComboBox();
        jPnl_menú = new javax.swing.JPanel();
        jBtn_guardar = new javax.swing.JButton();
        jBtn_limpiar = new javax.swing.JButton();
        jBtn_ir_editar = new javax.swing.JButton();
        jLbl_codigo = new javax.swing.JLabel();
        jTxFld_codigo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTbl_empadronados = new javax.swing.JTable();
        F = new javax.swing.JRadioButton();
        M = new javax.swing.JRadioButton();
        jLbl_reloj = new javax.swing.JLabel();
        jLbl_ejmNombres = new javax.swing.JLabel();
        jLbl_ejmApellidos = new javax.swing.JLabel();
        jLbl_ejmDireccion = new javax.swing.JLabel();
        jLbl_imagenEcuador = new javax.swing.JLabel();

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLbl_titulo_RegistrarDatos.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLbl_titulo_RegistrarDatos.setForeground(new java.awt.Color(51, 0, 102));
        jLbl_titulo_RegistrarDatos.setText("REGISTRAR DATOS PARA EMPADRONAR");
        jLbl_titulo_RegistrarDatos.setName("jLbl_titulo_RegistrarDatos"); // NOI18N

        jLbl_nombres.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_nombres.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_nombres.setText("Nombres:");
        jLbl_nombres.setName("jLbl_nombres"); // NOI18N

        jLbl_apellidos.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_apellidos.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_apellidos.setText("Apellidos:");
        jLbl_apellidos.setName("jLbl_apellidos"); // NOI18N

        jLbl_CI.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_CI.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_CI.setText("C.I.:");
        jLbl_CI.setName("jLbl_CI"); // NOI18N

        jLbl_lugarNacimiento.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_lugarNacimiento.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_lugarNacimiento.setText("Lugar de Nacimiento:");
        jLbl_lugarNacimiento.setName("jLbl_lugarNacimiento"); // NOI18N

        jLbl_fechaNacimiento.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_fechaNacimiento.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_fechaNacimiento.setText("Fecha de Nacimiento:");
        jLbl_fechaNacimiento.setName("jLbl_fechaNacimiento"); // NOI18N

        jLbl_estadoCivil.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_estadoCivil.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_estadoCivil.setText("Estado Civil:");
        jLbl_estadoCivil.setName("jLbl_estadoCivil"); // NOI18N

        jLbl_dirección.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_dirección.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_dirección.setText("Dirección actual:");
        jLbl_dirección.setName("jLbl_dirección"); // NOI18N

        jLbl_nacionalidad.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_nacionalidad.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_nacionalidad.setText("Nacionalidad:");
        jLbl_nacionalidad.setName("jLbl_nacionalidad"); // NOI18N

        jLbl_sexo.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_sexo.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_sexo.setText("Sexo:");
        jLbl_sexo.setName("jLbl_sexo"); // NOI18N

        jTxFld_nombre.setForeground(new java.awt.Color(102, 0, 102));
        jTxFld_nombre.setName("jTxFld_nombre"); // NOI18N
        jTxFld_nombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTxFld_nombreMousePressed(evt);
            }
        });
        jTxFld_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxFld_nombreActionPerformed(evt);
            }
        });
        jTxFld_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTxFld_nombreKeyPressed(evt);
            }
        });

        jTxFld_apellido.setForeground(new java.awt.Color(102, 0, 102));
        jTxFld_apellido.setName("jTxFld_apellido"); // NOI18N
        jTxFld_apellido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTxFld_apellidoMousePressed(evt);
            }
        });
        jTxFld_apellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxFld_apellidoActionPerformed(evt);
            }
        });

        jTxFld_CI.setForeground(new java.awt.Color(102, 0, 102));
        jTxFld_CI.setName("jTxFld_CI"); // NOI18N
        jTxFld_CI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTxFld_CIKeyPressed(evt);
            }
        });

        jTxFld_dirección.setForeground(new java.awt.Color(102, 0, 102));
        jTxFld_dirección.setName("jTxFld_dirección"); // NOI18N

        jTxFld_nacionalidad.setEditable(false);
        jTxFld_nacionalidad.setForeground(new java.awt.Color(102, 0, 102));
        jTxFld_nacionalidad.setText("Ecutoriana");
        jTxFld_nacionalidad.setName("jTxFld_nacionalidad"); // NOI18N

        jCmbBx_lugar_nacimiento.setFont(new java.awt.Font("Tahoma", 0, 12));
        jCmbBx_lugar_nacimiento.setForeground(new java.awt.Color(102, 0, 102));
        jCmbBx_lugar_nacimiento.setName("jCmbBx_lugar_nacimiento"); // NOI18N
        jCmbBx_lugar_nacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbBx_lugar_nacimientoActionPerformed(evt);
            }
        });

        jCmbBx_estado_civil.setFont(new java.awt.Font("Tahoma", 0, 12));
        jCmbBx_estado_civil.setForeground(new java.awt.Color(102, 0, 102));
        jCmbBx_estado_civil.setName("jCmbBx_estado_civil"); // NOI18N
        jCmbBx_estado_civil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCmbBx_estado_civilMouseReleased(evt);
            }
        });
        jCmbBx_estado_civil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbBx_estado_civilActionPerformed(evt);
            }
        });

        jCmbBx_año_nacimiento.setFont(new java.awt.Font("Tahoma", 0, 12));
        jCmbBx_año_nacimiento.setForeground(new java.awt.Color(102, 0, 102));
        jCmbBx_año_nacimiento.setName("jCmbBx_año_nacimiento"); // NOI18N
        jCmbBx_año_nacimiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCmbBx_año_nacimientoMouseReleased(evt);
            }
        });

        jCmbBx_mes_nacimiento.setFont(new java.awt.Font("Tahoma", 0, 12));
        jCmbBx_mes_nacimiento.setForeground(new java.awt.Color(102, 0, 102));
        jCmbBx_mes_nacimiento.setName("jCmbBx_mes_nacimiento"); // NOI18N
        jCmbBx_mes_nacimiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCmbBx_mes_nacimientoMouseReleased(evt);
            }
        });
        jCmbBx_mes_nacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbBx_mes_nacimientoActionPerformed(evt);
            }
        });

        jCmbBx_dia_nacimiento.setFont(new java.awt.Font("Tahoma", 0, 12));
        jCmbBx_dia_nacimiento.setName("jCmbBx_dia_nacimiento"); // NOI18N
        jCmbBx_dia_nacimiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCmbBx_dia_nacimientoMouseReleased(evt);
            }
        });

        jPnl_menú.setBackground(new java.awt.Color(255, 255, 255));
        jPnl_menú.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MENÚ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 153))); // NOI18N
        jPnl_menú.setName("jPnl_menú"); // NOI18N

        jBtn_guardar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBtn_guardar.setForeground(new java.awt.Color(51, 0, 102));
        jBtn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_sev1/Recursos/guardardatos.jpg"))); // NOI18N
        jBtn_guardar.setText("GUARDAR ");
        jBtn_guardar.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(51, 0, 102)));
        jBtn_guardar.setEnabled(false);
        jBtn_guardar.setName("jBtn_guardar"); // NOI18N
        jBtn_guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtn_guardarMouseClicked(evt);
            }
        });

        jBtn_limpiar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBtn_limpiar.setForeground(new java.awt.Color(51, 0, 102));
        jBtn_limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_sev1/Recursos/borrar.jpg"))); // NOI18N
        jBtn_limpiar.setText("LIMPIAR");
        jBtn_limpiar.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(51, 0, 102)));
        jBtn_limpiar.setName("jBtn_limpiar"); // NOI18N
        jBtn_limpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtn_limpiarMouseClicked(evt);
            }
        });

        jBtn_ir_editar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBtn_ir_editar.setForeground(new java.awt.Color(51, 0, 102));
        jBtn_ir_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_sev1/Recursos/ico_salir.jpg"))); // NOI18N
        jBtn_ir_editar.setText(" ATRAS  ");
        jBtn_ir_editar.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(51, 0, 102)));
        jBtn_ir_editar.setName("jBtn_ir_editar"); // NOI18N
        jBtn_ir_editar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtn_ir_editarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPnl_menúLayout = new javax.swing.GroupLayout(jPnl_menú);
        jPnl_menú.setLayout(jPnl_menúLayout);
        jPnl_menúLayout.setHorizontalGroup(
            jPnl_menúLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl_menúLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl_menúLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtn_guardar)
                    .addComponent(jBtn_ir_editar)
                    .addComponent(jBtn_limpiar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPnl_menúLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBtn_guardar, jBtn_ir_editar, jBtn_limpiar});

        jPnl_menúLayout.setVerticalGroup(
            jPnl_menúLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl_menúLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtn_guardar)
                .addGap(11, 11, 11)
                .addComponent(jBtn_limpiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtn_ir_editar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPnl_menúLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtn_guardar, jBtn_ir_editar, jBtn_limpiar});

        jLbl_codigo.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_codigo.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_codigo.setText("Codigo:");
        jLbl_codigo.setName("jLbl_codigo"); // NOI18N

        jTxFld_codigo.setEditable(false);
        jTxFld_codigo.setForeground(new java.awt.Color(102, 0, 102));
        jTxFld_codigo.setName("jTxFld_codigo"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTbl_empadronados.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 0, 102)));
        jTbl_empadronados.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTbl_empadronados.setForeground(new java.awt.Color(51, 0, 102));
        jTbl_empadronados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombres", "Apellidos", "C.I.", "F_Nacimiento", "L_Nacimiento", "Nacionalidad", "Estado Civil", "Sexo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTbl_empadronados.setName("jTbl_empadronados"); // NOI18N
        jScrollPane2.setViewportView(jTbl_empadronados);

        F.setFont(new java.awt.Font("Tahoma", 1, 11));
        F.setForeground(new java.awt.Color(102, 0, 102));
        F.setText("F");
        F.setName("F"); // NOI18N

        M.setFont(new java.awt.Font("Tahoma", 1, 11));
        M.setForeground(new java.awt.Color(102, 0, 102));
        M.setText("M");
        M.setName("M"); // NOI18N

        jLbl_reloj.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_reloj.setForeground(new java.awt.Color(51, 0, 102));
        jLbl_reloj.setName("jLbl_reloj"); // NOI18N

        jLbl_ejmNombres.setFont(new java.awt.Font("Tahoma", 1, 10));
        jLbl_ejmNombres.setForeground(new java.awt.Color(153, 0, 0));
        jLbl_ejmNombres.setText("INGRESE SUS NOMBRES SEGUIDOS DE UN GUION: Ejm. Ana_Valeria");
        jLbl_ejmNombres.setName("jLbl_ejmNombres"); // NOI18N

        jLbl_ejmApellidos.setFont(new java.awt.Font("Tahoma", 1, 10));
        jLbl_ejmApellidos.setForeground(new java.awt.Color(153, 0, 0));
        jLbl_ejmApellidos.setText("INGRESE SUS APELLIDOS SEGUIDOS DE UN GUION: Ejm. García_Roldán");
        jLbl_ejmApellidos.setName("jLbl_ejmApellidos"); // NOI18N

        jLbl_ejmDireccion.setFont(new java.awt.Font("Tahoma", 1, 10));
        jLbl_ejmDireccion.setForeground(new java.awt.Color(153, 0, 0));
        jLbl_ejmDireccion.setText("INGRESE SU DIRECCION SEGUIDOS DE UN GUION: Ejm. Comite_del_Pueblo");
        jLbl_ejmDireccion.setName("jLbl_ejmDireccion"); // NOI18N

        jLbl_imagenEcuador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_sev1/Recursos/ecuador-copia.jpg"))); // NOI18N
        jLbl_imagenEcuador.setName("jLbl_imagenEcuador"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1016, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLbl_imagenEcuador)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(122, 122, 122)
                                        .addComponent(jLbl_reloj, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLbl_nombres)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLbl_ejmNombres, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                                            .addComponent(jTxFld_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLbl_dirección)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTxFld_dirección, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                                            .addComponent(jLbl_ejmDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLbl_CI)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTxFld_CI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLbl_lugarNacimiento)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCmbBx_lugar_nacimiento, 0, 87, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLbl_sexo)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(F)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(M))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLbl_nacionalidad)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTxFld_nacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLbl_estadoCivil)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCmbBx_estado_civil, 0, 87, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLbl_fechaNacimiento)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCmbBx_año_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCmbBx_mes_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCmbBx_dia_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(32, 32, 32)))
                                        .addGap(38, 38, 38)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jPnl_menú, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLbl_codigo)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTxFld_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(12, 12, 12))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLbl_apellidos)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTxFld_apellido, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                                            .addComponent(jLbl_ejmApellidos, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(jLbl_titulo_RegistrarDatos)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jCmbBx_estado_civil, jCmbBx_lugar_nacimiento, jTxFld_CI, jTxFld_nacionalidad});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jCmbBx_dia_nacimiento, jCmbBx_mes_nacimiento});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLbl_ejmApellidos, jLbl_ejmDireccion, jLbl_ejmNombres});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLbl_CI, jLbl_apellidos, jLbl_dirección, jLbl_estadoCivil, jLbl_fechaNacimiento, jLbl_lugarNacimiento, jLbl_nacionalidad, jLbl_nombres, jLbl_sexo});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTxFld_apellido, jTxFld_dirección, jTxFld_nombre});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLbl_titulo_RegistrarDatos)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLbl_ejmNombres)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxFld_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLbl_nombres))
                        .addGap(18, 18, 18)
                        .addComponent(jLbl_ejmApellidos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxFld_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLbl_apellidos))
                        .addGap(18, 18, 18)
                        .addComponent(jLbl_ejmDireccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxFld_dirección, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLbl_dirección))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCmbBx_año_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLbl_fechaNacimiento)
                                    .addComponent(jCmbBx_mes_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCmbBx_dia_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTxFld_CI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLbl_CI))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCmbBx_lugar_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLbl_lugarNacimiento))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTxFld_nacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLbl_nacionalidad))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLbl_sexo)
                                    .addComponent(F)
                                    .addComponent(M))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCmbBx_estado_civil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLbl_estadoCivil)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTxFld_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLbl_codigo))
                                .addGap(18, 18, 18)
                                .addComponent(jPnl_menú, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLbl_imagenEcuador, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLbl_reloj, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jCmbBx_estado_civil, jCmbBx_lugar_nacimiento, jTxFld_CI, jTxFld_nacionalidad});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTxFld_apellido, jTxFld_dirección, jTxFld_nombre});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jCmbBx_año_nacimiento, jCmbBx_dia_nacimiento, jCmbBx_mes_nacimiento});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLbl_ejmApellidos, jLbl_ejmDireccion, jLbl_ejmNombres});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLbl_CI, jLbl_apellidos, jLbl_dirección, jLbl_estadoCivil, jLbl_fechaNacimiento, jLbl_lugarNacimiento, jLbl_nacionalidad, jLbl_nombres, jLbl_sexo});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTxFld_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxFld_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxFld_nombreActionPerformed
    private void limpiarDatos() {//metodo para limpiar los datos anteriores
        jTxFld_nombre.setText("");//limpia dato anterior
        jTxFld_apellido.setText("");//limpia dato anterior
        jTxFld_CI.setText("");//limpia dato anterior
        GCodigo();//muestra nuevo codigo
        jTxFld_dirección.setText("");//limpia dato anterior
        jCmbBx_lugar_nacimiento.setSelectedItem("");//limpia dato anterior
        jCmbBx_estado_civil.setSelectedItem("");//limpia dato anterior
        M.setSelected(false);//limpia dato anterior
        F.setSelected(false);//limpia dato anterior
        jCmbBx_año_nacimiento.setSelectedItem("");//limpia dato anterior
        jCmbBx_mes_nacimiento.setSelectedItem("");//limpia dato anterior
        jCmbBx_dia_nacimiento.setSelectedItem("");//limpia dato anterior
        jBtn_guardar.setEnabled(false);
    }

    private boolean existeRegistro() {//metodo para verificar si ya esta empadronado
        boolean existe = false;//inicializa un valor boolean para indicar si el nuevo empadronado ya existe
        buscar busca = new buscar("empa.txt");//codigo para crear objeto de clase buscar
        String dato = busca.BuscarDatos(jTxFld_CI.getText().toString());//guarda el numero de cedula para poderlo buscar
        if (dato.equals("")) {//compara si el numero de cedula esta vacio
            existe = false;//asigna false si dato esta vacio
        } else {
            existe = true;//asigna true si dato es diferente vacio
        }
        return existe;//retorna existe
    }

    private boolean listo() {//metodo para verificar que ingrese datos
        boolean ok = false;//inicializa variable ok para indicar si hay ingreso de datos
        if (jTxFld_nombre.getText().toString().equals("") || jTxFld_apellido.getText().toString().equals("") || jTxFld_CI.getText().toString().equals("") || jTxFld_dirección.getText().toString().equals("")) {//indica si los datos existen
            ok = false;//asigna false en ok si no hay datos
        } else {
            ok = true;//asigna true si los datos existen
        }
        return ok;//retorna ok
    }
    private void jBtn_guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_guardarMouseClicked
        // TODO add your handling code here:
        String numcedula = jTxFld_CI.getText();//captura el numero de CI
        //codigo verificar que ingrese solo 10 digitos en la CI
        if (numcedula.length() < 10) {//si los digitos son menores a 10
            JOptionPane.showMessageDialog(null, "NUMERO DE CEDULA INCOMPLETO","ERROR",0);//muestra mensaje
            jTxFld_CI.setText("");//limpia casillero  jTxFld_CI
        }
        if (numcedula.length() > 10) {//si los digitos son mayores a 10
            JOptionPane.showMessageDialog(null, "HA EXCEDIDO EL NUMERO DE DIGITOS ","ERROR",0);//muestra mensaje
            jTxFld_CI.setText("");//limpia casillero  jTxFld_CI
        }
        // codigo para verificar si el numero de CI es valido
        if (numcedula.length() == 10) {//si los digitos soniguales a 10
            int cedula = Integer.parseInt(numcedula);//convierte de String a int
            int V[] = new int[10];//crea vector de 10 posiciones para CI
            int k = 1000000000;//para poder dividir el numero de cedula
            int aux;
            int div = 0;
            int i = 0;

            do {//codigo para guardar cada digito en un vector
                div = cedula / k;
                V[i] = div;
                int mod = cedula % k;
                cedula = mod;
                k = k / 10;
                i++;
            } while (k != 0);
            int l = 1, s = 0;     //coddigo suma solo digitos pares
            while (l <= 7) {
                s = s + V[l];
                l = l + 2;
            }
            int l1 = 0, s1 = 0, m = 1;    //proceso para numeros impares
            while (l1 < 9) {
                m = V[l1] * 2;
                if (m > 9) {
                    m = m - 9;
                }
                s1 = s1 + m;
                l1 = l1 + 2;
            }
            //codigo para verificar el ultimo digito de la CI
            int st = s + s1;
            int aux1 = (st / 10) * 10;
            int ds = aux1 + 10;
            int val = ds - st;
            if (val == V[9]) {
                //codigo para guardar genero de empadronado
                String genero = "";//variable para guardar genero de persona
                if (M.isSelected() == true) {//para verificar si el genero seleccionado es masculino
                    genero = "MASCULINO";//para asignar genero masculino
                }
                if (F.isSelected() == true) {//para verificar si el genero seleccionado es femenino
                    genero = "FEMENINO";//para asignar genero femenino
                }
                persona empa = new persona(jTxFld_nombre.getText().toString(), jTxFld_apellido.getText().toString(), jTxFld_CI.getText().toString(), jTxFld_codigo.getText(), jTxFld_dirección.getText().toString(), jTxFld_nacionalidad.getText().toString(), jCmbBx_año_nacimiento.getSelectedItem().toString(), jCmbBx_mes_nacimiento.getSelectedItem().toString(), jCmbBx_dia_nacimiento.getSelectedItem().toString(), jCmbBx_lugar_nacimiento.getSelectedItem().toString(), jCmbBx_estado_civil.getSelectedItem().toString(), genero);//guarda datos de empadronado
                //codigo para verificar si esta empadronado en (registro)
                String solo_cedula = jTxFld_CI.getText();// guarda numero de cedula ingresada para validar que solo vote una vez
                String datos = empa.datospersona();//guarda en datos para poder guardar en fichero
                try {
                    if (listo() == true) {//llamada a metodo listo para verificar que ingrese todos los datos del empadronado
                        if (existeRegistro() == false) {//verifica para que solo se pueda empadronar una vez
                            File entrada = new File("empa.txt");//abre fichero
                            FileWriter fw = new FileWriter(entrada, true);//habilita metodo para poder escribir
                            PrintWriter pw = new PrintWriter(fw);
                            pw.println(datos);//escribe en fichero
                            pw.close();//cierra fichero

                            File entradacedula = new File("cedulas.txt");//abre fichero
                            FileWriter fwcedula = new FileWriter(entradacedula, true);//habilita metodo para poder escribir
                            PrintWriter pcedula = new PrintWriter(fwcedula);
                            pcedula.println(solo_cedula);//escribe en fichero para despues validar que vote solo una vez
                            pcedula.close();//cierra fichero

                            JOptionPane.showMessageDialog(null, "Los datos han sido guardados", "* * *   EXITO   * * *", 1);//mensaje para aviso que los datos se guardaron correctamente
                            actualizar_tabla();//muestra nuevos datos
                            limpiarDatos();//limpia ventana de empadronado para poder ingresar otro empadronado
                            jBtn_guardar.setEnabled(false);
                        } else {
                            JOptionPane.showMessageDialog(null, "USTED YA ESTA EMPADRONADO", "* * *   ALTO   * * *", 2);//mensaje de aviso que ya fue empadronado anteriormente
                        }
                        limpiarDatos();//limpia ventana de empadronado para poder ingresar otro empadronado
                    } else {
                        JOptionPane.showMessageDialog(null, "Por favor llene todos los campos", "* * *   ERROR   * * *", 0);//mensaje si no se llenan todos los campos
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage(), "* * *   ERROR   * * *", 0);// mensasje cuando existe un error al guardar datos
                }

            } else {
                JOptionPane.showMessageDialog(null, "Cedula Incorrecta");//mensaje para aviso que la cedula ingresada es incorrecta
                jTxFld_CI.setText("");//limpia casilla de ingreso de cedula
            }
        }
    }//GEN-LAST:event_jBtn_guardarMouseClicked

    private void jBtn_limpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_limpiarMouseClicked
        // TODO add your handling code here:
        limpiarDatos();////limpia ventana de empadronado para poder ingresar otro empadronado
    }//GEN-LAST:event_jBtn_limpiarMouseClicked

    private void jBtn_ir_editarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_ir_editarMouseClicked
        // TODO add your handling code here:
        editar ir = new editar();// crea objeto para ir a nueva ventana
        this.setVisible(false);//oculta la ventana actual
        ir.setVisible(true);//muestra la nueva ventana
        ir.setLocationRelativeTo(null);// para que la ventana este siempre centrada
    }//GEN-LAST:event_jBtn_ir_editarMouseClicked

    private void jTxFld_CIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxFld_CIKeyPressed
        // TODO add your handling code here:
        String str = jTxFld_CI.getText();//guarda cedula ingresada
        boolean resultado = str.startsWith("-");//ayuda para que ingrese numeros validos y no ingrese numeros negativos
        if (resultado == true) {//verifica si ingresa numeros negativos
            JOptionPane.showMessageDialog(null, "Ingrese una cantidad valida");//mensaje de aviso que el numero ingresado no es valido
            jTxFld_CI.setText("");//limpia casilla de ingreso de cedula
        }

        if (!jTxFld_CI.getText().equals("")) {//verifica si ingreso algun valor en el casillero de cedula
            try {
                int ci = Integer.parseInt(jTxFld_CI.getText());//convierte a entero la cedula de identidad ingresada
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Solo se pueden ingresar numeros");//mensaje si no se ingreso numeros
                jTxFld_CI.setText("");//limpia casilla de ingreso de cedula
            }
        }
    }//GEN-LAST:event_jTxFld_CIKeyPressed

    private void jCmbBx_lugar_nacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBx_lugar_nacimientoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCmbBx_lugar_nacimientoActionPerformed

    private void jTxFld_nombreMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTxFld_nombreMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxFld_nombreMousePressed

    private void jTxFld_apellidoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTxFld_apellidoMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxFld_apellidoMousePressed

    private void jTxFld_nombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxFld_nombreKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTxFld_nombreKeyPressed

    private void jCmbBx_mes_nacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBx_mes_nacimientoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCmbBx_mes_nacimientoActionPerformed

    private void jCmbBx_estado_civilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBx_estado_civilActionPerformed
        // TODO add your handling code here:
        jBtn_guardar.setEnabled(true);
    }//GEN-LAST:event_jCmbBx_estado_civilActionPerformed

    private void jCmbBx_año_nacimientoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCmbBx_año_nacimientoMouseReleased
        // TODO add your handling code here:
         jCmbBx_año_nacimiento.removeAllItems();
        for (int i = 1940; i <= 2011; i++) {
            jCmbBx_año_nacimiento.addItem(i);//añade datos de mes en jCmbBx_mes_nacimiento
        }
    }//GEN-LAST:event_jCmbBx_año_nacimientoMouseReleased
    
    private void actualizar_tabla() throws FileNotFoundException, IOException
    {
        DefaultTableModel dt = new DefaultTableModel();
            jTbl_empadronados.setModel(dt);
            jTbl_empadronados.setEnabled(false);
            dt.addColumn("CODIGO");
            dt.addColumn("NOMBRE");
            dt.addColumn("APELLIDO");
            dt.addColumn("CI");
            dt.addColumn("FECHA");
            dt.addColumn("PROVINCIA");
            dt.addColumn("NACIONALIDAD");
            dt.addColumn("ESTADO CIVIL");
            dt.addColumn("SEXO");
            File archivo = null;
            FileReader fr = null;
            BufferedReader br = null;
            archivo = new File("empa.txt");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            String linea;
            int i = 0,AYUDA=0;
            while ((linea = br.readLine()) != null) //guarda el contenido de cada linea de fichero hasta el final y guarda en linea
            {
                AYUDA++;
                if(AYUDA!=1){
                StringTokenizer tok = new StringTokenizer(linea);//metodo para saltar espacios en blanco y tomar el siguiente dato del fichero
                String cedula = tok.nextToken().toString();//guarda codigo de empadronado
                String codigo = tok.nextToken().toString();//guarda codigo de empadronado
                String nombre = tok.nextToken().toString();//guarda nombre de empadronado
                String apellido = tok.nextToken().toString();//guarda apellido de empadronado
                String direccion = tok.nextToken().toString();//guarda direccion de empadronado
                String lugarnacimiento = tok.nextToken().toString();//guarda lugar de nacimiento de empadronado
                String estadocivil = tok.nextToken().toString();//guarda estado civil de empadronado
                String sexo = tok.nextToken().toString();//guarda sexo de empadronado
                String dia = tok.nextToken().toString();////guarda dia de empadronado
                String mes = tok.nextToken().toString();//guarda mes de empadronado
                String anio = tok.nextToken().toString();//guarda año de empadronado
                String nacionalidad = tok.nextToken().toString();//guarda nacionalidad de empadronado
                 dt.setRowCount(i);
                 dt.addRow(new Object[]{codigo,nombre,apellido,cedula,anio+"/"+mes+"/"+dia,lugarnacimiento,nacionalidad,estadocivil,sexo});
                 i++;
                }
            }
    
    }


    private void jCmbBx_mes_nacimientoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCmbBx_mes_nacimientoMouseReleased
        // TODO add your handling code here:
        jCmbBx_mes_nacimiento.removeAllItems();//limpia datos de dia en jCmbBx_dia_nacimiento
        for (int i = 1; i <= 12; i++) {
            jCmbBx_mes_nacimiento.addItem(i);//añade datos de mes en jCmbBx_mes_nacimiento
        }
        int anio = Integer.parseInt(jCmbBx_año_nacimiento.getSelectedItem().toString());//convierte a entero dato de año seleccionado

                if ((anio % 4 == 0) && ((anio % 100 != 0) || (anio % 400 == 0))) {//verifica si el año es bisiesto
                    jCmbBx_dia_nacimiento.removeAllItems();//limpia datos de dia en jCmbBx_dia_nacimiento
                    int mes = Integer.parseInt(jCmbBx_mes_nacimiento.getSelectedItem().toString());//añade datos de mes en  jCmbBx_mes_nacimiento

                    if (mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12)
                    {//para mostrar datos de meses que tienen 31 dias
                        for (int i = 1; i <= 31; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 4 || mes == 6 || mes == 9 || mes == 11)
                    {//para mostrar datos de meses que tienen 30 dias
                        for (int i = 1; i <= 30; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 2) {//si el año es bisiesto febrero tiene 29 dias
                        for (int i = 1; i <= 29; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                } else {
                    int mes = Integer.parseInt(jCmbBx_mes_nacimiento.getSelectedItem().toString());//añade datos de mes en  jCmbBx_mes_nacimiento
                    if (mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12)
                    {//añade datos de dia en  jCmbBx_dia_nacimiento
                        for (int i = 1; i <= 31; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 4 || mes == 6 || mes == 9 || mes == 11)
                    {//para mostrar datos de meses que tienen 30 dias
                        for (int i = 1; i <= 30; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 2) {//si el año es bisiesto febrero tiene 28 dias
                        for (int i = 1; i <= 28; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                }
    }//GEN-LAST:event_jCmbBx_mes_nacimientoMouseReleased

    private void jCmbBx_dia_nacimientoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCmbBx_dia_nacimientoMouseReleased
        // TODO add your handling code here:
        int anio = Integer.parseInt(jCmbBx_año_nacimiento.getSelectedItem().toString());//convierte a entero dato de año seleccionado

                if ((anio % 4 == 0) && ((anio % 100 != 0) || (anio % 400 == 0))) {//verifica si el año es bisiesto
                    jCmbBx_dia_nacimiento.removeAllItems();//limpia datos de dia en jCmbBx_dia_nacimiento
                    int mes = Integer.parseInt(jCmbBx_mes_nacimiento.getSelectedItem().toString());//añade datos de mes en  jCmbBx_mes_nacimiento

                    if (mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12)
                    {//para mostrar datos de meses que tienen 31 dias
                        for (int i = 1; i <= 31; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 4 || mes == 6 || mes == 9 || mes == 11)
                    {//para mostrar datos de meses que tienen 30 dias
                        for (int i = 1; i <= 30; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 2) {//si el año es bisiesto febrero tiene 29 dias
                        for (int i = 1; i <= 29; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                } else {
                    int mes = Integer.parseInt(jCmbBx_mes_nacimiento.getSelectedItem().toString());//añade datos de mes en  jCmbBx_mes_nacimiento
                    if (mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12)
                    {//añade datos de dia en  jCmbBx_dia_nacimiento
                        for (int i = 1; i <= 31; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 4 || mes == 6 || mes == 9 || mes == 11)
                    {//para mostrar datos de meses que tienen 30 dias
                        for (int i = 1; i <= 30; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 2) {//si el año es bisiesto febrero tiene 28 dias
                        for (int i = 1; i <= 28; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                }
    }//GEN-LAST:event_jCmbBx_dia_nacimientoMouseReleased

    private void jCmbBx_estado_civilMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCmbBx_estado_civilMouseReleased
        // TODO add your handling code here:
        jCmbBx_estado_civil.removeAllItems();
        for(int i=0;i<ECivil.length;i++)
        {
            jCmbBx_estado_civil.addItem(ECivil[i]);
        }

    }//GEN-LAST:event_jCmbBx_estado_civilMouseReleased

    private void jTxFld_apellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxFld_apellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxFld_apellidoActionPerformed
    /**
     * @param args the command line arguments
     */
//     public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                try {
//                    new empadronar().setVisible(true); // clase principal
//                } catch (FileNotFoundException ex) {
//                    Logger.getLogger(empadronar.class.getName()).log(Level.SEVERE, null, ex);
//                } catch (IOException ex) {
//                    Logger.getLogger(empadronar.class.getName()).log(Level.SEVERE, null, ex);
//                }
//
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton F;
    private javax.swing.ButtonGroup GRUPO1;
    private javax.swing.JRadioButton M;
    private javax.swing.JButton jBtn_guardar;
    private javax.swing.JButton jBtn_ir_editar;
    private javax.swing.JButton jBtn_limpiar;
    private javax.swing.JComboBox jCmbBx_año_nacimiento;
    private javax.swing.JComboBox jCmbBx_dia_nacimiento;
    private javax.swing.JComboBox jCmbBx_estado_civil;
    private javax.swing.JComboBox jCmbBx_lugar_nacimiento;
    private javax.swing.JComboBox jCmbBx_mes_nacimiento;
    private javax.swing.JLabel jLbl_CI;
    private javax.swing.JLabel jLbl_apellidos;
    private javax.swing.JLabel jLbl_codigo;
    private javax.swing.JLabel jLbl_dirección;
    private javax.swing.JLabel jLbl_ejmApellidos;
    private javax.swing.JLabel jLbl_ejmDireccion;
    private javax.swing.JLabel jLbl_ejmNombres;
    private javax.swing.JLabel jLbl_estadoCivil;
    private javax.swing.JLabel jLbl_fechaNacimiento;
    private javax.swing.JLabel jLbl_imagenEcuador;
    private javax.swing.JLabel jLbl_lugarNacimiento;
    private javax.swing.JLabel jLbl_nacionalidad;
    private javax.swing.JLabel jLbl_nombres;
    private javax.swing.JLabel jLbl_reloj;
    private javax.swing.JLabel jLbl_sexo;
    private javax.swing.JLabel jLbl_titulo_RegistrarDatos;
    private javax.swing.JPanel jPnl_menú;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTbl_empadronados;
    private javax.swing.JTextField jTxFld_CI;
    private javax.swing.JTextField jTxFld_apellido;
    private javax.swing.JTextField jTxFld_codigo;
    private javax.swing.JTextField jTxFld_dirección;
    private javax.swing.JTextField jTxFld_nacionalidad;
    private javax.swing.JTextField jTxFld_nombre;
    // End of variables declaration//GEN-END:variables
}
