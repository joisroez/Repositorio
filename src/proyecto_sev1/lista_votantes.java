package proyecto_sev1;
import clases.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.awt.event.*;
import java.io.*;
public class lista_votantes extends JFrameConFondo {
    /** Creates new form lista_votantes */
    public lista_votantes() {
        initComponents();
        GRUPO1.add(F);
        GRUPO1.add(M);
       jBtn_guardar.setEnabled(false);
        setImagen("Recursos/sev2.jpg");//codigo para imagen en Panel
        setLocationRelativeTo(null);// para que la ventana este siempre centrada
        this.jPnl_datos.setVisible(false);//para habilitar el Jpanel1
        Reloj modelo=new Reloj();//codigo para crear objeto de clase Reloj
                modelo.addObserver (new Observer()
                 {
                     public void update (Observable unObservable, Object dato)
                     {
                         jLbl_reloj.setText(""+dato);//codigo para mostrar reloj
                     }
                 });
                 //////
                 for (int i = 1940; i<2013; i++){
                jCmbBx_año_nacimiento.addItem(i + "");//añade datos de año en jCmbBx_año_nacimiento
            }
             String Provincias[] = {"Azuay", "Bolívar", "Cañar", "Carchi", "Chimborazo",
            "Cotopaxi", "El_Oro", "Esmeraldas", "Galápagos",
            "Guayas", "Imbabura", "Loja", "Los_Ríos", "Manabí", "Morona_Santiago",
            "Napo", "Orellana", "Pastaza", "Pichincha", "Santa_Elena",
            "Sto._Domingo_de_los_Tsachilas", "Sucumbíos", "Tungurahua",
            "Zamora_Chinchipe"};//vector para guardar provincias del Ecuador
        for (int i = 0; i < 24; i++) {//para añadir las provincias en jCmbBx_lugar_nacimiento
            jCmbBx_lugarNacimiento.addItem(Provincias[i]);//muestra en jCmbBx_lugar_nacimiento las provincias de Ecuador
        }
    }
    String ECivil[]={"Solter@","Viud@","Casad@","Divorciad@","Uniòn Libre"};
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GRUPO1 = new javax.swing.ButtonGroup();
        jLbl_titulo_ConsultaEmpadronado = new javax.swing.JLabel();
        jLbl_ingresoCI = new javax.swing.JLabel();
        jBtn_buscar = new javax.swing.JButton();
        jBtn_ir_editar = new javax.swing.JButton();
        jBtn_guardar = new javax.swing.JButton();
        jLbl_reloj = new javax.swing.JLabel();
        jPnl_datos = new javax.swing.JPanel();
        jLbl_nombres = new javax.swing.JLabel();
        jLbl_apellidos = new javax.swing.JLabel();
        jLbl_dirección = new javax.swing.JLabel();
        jLbl_fechaNacimiento = new javax.swing.JLabel();
        jLbl_lugarNacimiento = new javax.swing.JLabel();
        jLbl_nacionalidad = new javax.swing.JLabel();
        jLbl_codigo = new javax.swing.JLabel();
        jLbl_estadoCivil = new javax.swing.JLabel();
        jLbl_sexo = new javax.swing.JLabel();
        jTxFld_nombres = new javax.swing.JTextField();
        jTxFld_apellidos = new javax.swing.JTextField();
        jTxFld_dirección = new javax.swing.JTextField();
        jTxFld_nacionalidad = new javax.swing.JTextField();
        jTxFld_codigo = new javax.swing.JTextField();
        jLbl_imagen_empadronado = new javax.swing.JLabel();
        jCmbBx_año_nacimiento = new javax.swing.JComboBox();
        jCmbBx_mes_nacimiento = new javax.swing.JComboBox();
        jCmbBx_dia_nacimiento = new javax.swing.JComboBox();
        F = new javax.swing.JRadioButton();
        M = new javax.swing.JRadioButton();
        jCmbBx_lugarNacimiento = new javax.swing.JComboBox();
        jCmbBx_estadoCivil = new javax.swing.JComboBox();
        jTxFld_ingresoCI = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLbl_titulo_ConsultaEmpadronado.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLbl_titulo_ConsultaEmpadronado.setForeground(new java.awt.Color(51, 0, 102));
        jLbl_titulo_ConsultaEmpadronado.setText("CONSULTA DATOS EMPADRONADO");
        jLbl_titulo_ConsultaEmpadronado.setName("jLbl_titulo_ConsultaEmpadronado"); // NOI18N

        jLbl_ingresoCI.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_ingresoCI.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_ingresoCI.setText("INGRESE C.I.:");
        jLbl_ingresoCI.setName("jLbl_ingresoCI"); // NOI18N

        jBtn_buscar.setFont(new java.awt.Font("Tahoma", 1, 12));
        jBtn_buscar.setForeground(new java.awt.Color(0, 0, 153));
        jBtn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_sev1/Recursos/gfyui.JPG"))); // NOI18N
        jBtn_buscar.setText("BUSCAR");
        jBtn_buscar.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(51, 0, 102)));
        jBtn_buscar.setName("jBtn_buscar"); // NOI18N
        jBtn_buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtn_buscarMouseClicked(evt);
            }
        });
        jBtn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_buscarActionPerformed(evt);
            }
        });

        jBtn_ir_editar.setFont(new java.awt.Font("Tahoma", 1, 12));
        jBtn_ir_editar.setForeground(new java.awt.Color(0, 0, 153));
        jBtn_ir_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_sev1/Recursos/hvfk.JPG"))); // NOI18N
        jBtn_ir_editar.setText("ATRAS");
        jBtn_ir_editar.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(51, 0, 102)));
        jBtn_ir_editar.setName("jBtn_ir_editar"); // NOI18N
        jBtn_ir_editar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtn_ir_editarMouseClicked(evt);
            }
        });

        jBtn_guardar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jBtn_guardar.setForeground(new java.awt.Color(0, 0, 153));
        jBtn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_sev1/Recursos/Dibujo3.JPG"))); // NOI18N
        jBtn_guardar.setText("GUARDAR");
        jBtn_guardar.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(51, 0, 102)));
        jBtn_guardar.setName("jBtn_guardar"); // NOI18N
        jBtn_guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtn_guardarMouseClicked(evt);
            }
        });
        jBtn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_guardarActionPerformed(evt);
            }
        });

        jLbl_reloj.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLbl_reloj.setForeground(new java.awt.Color(0, 0, 102));
        jLbl_reloj.setName("jLbl_reloj"); // NOI18N

        jPnl_datos.setBackground(new java.awt.Color(255, 255, 255));
        jPnl_datos.setName("jPnl_datos"); // NOI18N

        jLbl_nombres.setBackground(new java.awt.Color(255, 255, 255));
        jLbl_nombres.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_nombres.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_nombres.setText("Nombres:");
        jLbl_nombres.setName("jLbl_nombres"); // NOI18N

        jLbl_apellidos.setBackground(new java.awt.Color(255, 255, 255));
        jLbl_apellidos.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_apellidos.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_apellidos.setText("Apellidos:");
        jLbl_apellidos.setName("jLbl_apellidos"); // NOI18N

        jLbl_dirección.setBackground(new java.awt.Color(255, 255, 255));
        jLbl_dirección.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_dirección.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_dirección.setText("Dirección:");
        jLbl_dirección.setName("jLbl_dirección"); // NOI18N

        jLbl_fechaNacimiento.setBackground(new java.awt.Color(255, 255, 255));
        jLbl_fechaNacimiento.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_fechaNacimiento.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_fechaNacimiento.setText("Fecha de Nacimiento:");
        jLbl_fechaNacimiento.setName("jLbl_fechaNacimiento"); // NOI18N

        jLbl_lugarNacimiento.setBackground(new java.awt.Color(255, 255, 255));
        jLbl_lugarNacimiento.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_lugarNacimiento.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_lugarNacimiento.setText("Lugar de Nacimiento:");
        jLbl_lugarNacimiento.setName("jLbl_lugarNacimiento"); // NOI18N

        jLbl_nacionalidad.setBackground(new java.awt.Color(255, 255, 255));
        jLbl_nacionalidad.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_nacionalidad.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_nacionalidad.setText("Nacionalidad:");
        jLbl_nacionalidad.setName("jLbl_nacionalidad"); // NOI18N

        jLbl_codigo.setBackground(new java.awt.Color(255, 255, 255));
        jLbl_codigo.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_codigo.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_codigo.setText("Codigo:");
        jLbl_codigo.setName("jLbl_codigo"); // NOI18N

        jLbl_estadoCivil.setBackground(new java.awt.Color(255, 255, 255));
        jLbl_estadoCivil.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_estadoCivil.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_estadoCivil.setText("Estado Civil:");
        jLbl_estadoCivil.setName("jLbl_estadoCivil"); // NOI18N

        jLbl_sexo.setBackground(new java.awt.Color(255, 255, 255));
        jLbl_sexo.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLbl_sexo.setForeground(new java.awt.Color(102, 0, 102));
        jLbl_sexo.setText("Sexo:");
        jLbl_sexo.setName("jLbl_sexo"); // NOI18N

        jTxFld_nombres.setFont(new java.awt.Font("Tahoma", 0, 12));
        jTxFld_nombres.setForeground(new java.awt.Color(102, 0, 102));
        jTxFld_nombres.setName("jTxFld_nombres"); // NOI18N

        jTxFld_apellidos.setFont(new java.awt.Font("Tahoma", 0, 12));
        jTxFld_apellidos.setForeground(new java.awt.Color(102, 0, 102));
        jTxFld_apellidos.setName("jTxFld_apellidos"); // NOI18N

        jTxFld_dirección.setFont(new java.awt.Font("Tahoma", 0, 12));
        jTxFld_dirección.setForeground(new java.awt.Color(102, 0, 102));
        jTxFld_dirección.setName("jTxFld_dirección"); // NOI18N

        jTxFld_nacionalidad.setFont(new java.awt.Font("Tahoma", 0, 12));
        jTxFld_nacionalidad.setForeground(new java.awt.Color(102, 0, 102));
        jTxFld_nacionalidad.setName("jTxFld_nacionalidad"); // NOI18N

        jTxFld_codigo.setEditable(false);
        jTxFld_codigo.setFont(new java.awt.Font("Tahoma", 0, 12));
        jTxFld_codigo.setForeground(new java.awt.Color(102, 0, 102));
        jTxFld_codigo.setName("jTxFld_codigo"); // NOI18N

        jLbl_imagen_empadronado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_sev1/Recursos/silueta.jpg"))); // NOI18N
        jLbl_imagen_empadronado.setName("jLbl_imagen_empadronado"); // NOI18N

        jCmbBx_año_nacimiento.setFont(new java.awt.Font("Tahoma", 0, 12));
        jCmbBx_año_nacimiento.setForeground(new java.awt.Color(102, 0, 102));
        jCmbBx_año_nacimiento.setName("jCmbBx_año_nacimiento"); // NOI18N
        jCmbBx_año_nacimiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCmbBx_año_nacimientoMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCmbBx_año_nacimientoMouseReleased(evt);
            }
        });
        jCmbBx_año_nacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbBx_año_nacimientoActionPerformed(evt);
            }
        });

        jCmbBx_mes_nacimiento.setFont(new java.awt.Font("Tahoma", 0, 12));
        jCmbBx_mes_nacimiento.setForeground(new java.awt.Color(102, 0, 102));
        jCmbBx_mes_nacimiento.setName("jCmbBx_mes_nacimiento"); // NOI18N
        jCmbBx_mes_nacimiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCmbBx_mes_nacimientoMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCmbBx_mes_nacimientoMouseReleased(evt);
            }
        });
        jCmbBx_mes_nacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbBx_mes_nacimientoActionPerformed(evt);
            }
        });

        jCmbBx_dia_nacimiento.setFont(new java.awt.Font("Tahoma", 0, 12));
        jCmbBx_dia_nacimiento.setForeground(new java.awt.Color(102, 0, 102));
        jCmbBx_dia_nacimiento.setName("jCmbBx_dia_nacimiento"); // NOI18N
        jCmbBx_dia_nacimiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCmbBx_dia_nacimientoMouseReleased(evt);
            }
        });

        F.setFont(new java.awt.Font("Tahoma", 1, 12));
        F.setForeground(new java.awt.Color(102, 0, 102));
        F.setText("F");
        F.setName("F"); // NOI18N

        M.setFont(new java.awt.Font("Tahoma", 1, 12));
        M.setForeground(new java.awt.Color(102, 0, 102));
        M.setText("M");
        M.setName("M"); // NOI18N

        jCmbBx_lugarNacimiento.setFont(new java.awt.Font("Tahoma", 0, 12));
        jCmbBx_lugarNacimiento.setForeground(new java.awt.Color(102, 0, 102));
        jCmbBx_lugarNacimiento.setName("jCmbBx_lugarNacimiento"); // NOI18N
        jCmbBx_lugarNacimiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCmbBx_lugarNacimientoMouseReleased(evt);
            }
        });

        jCmbBx_estadoCivil.setFont(new java.awt.Font("Tahoma", 0, 12));
        jCmbBx_estadoCivil.setForeground(new java.awt.Color(102, 0, 102));
        jCmbBx_estadoCivil.setName("jCmbBx_estadoCivil"); // NOI18N
        jCmbBx_estadoCivil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jCmbBx_estadoCivilMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPnl_datosLayout = new javax.swing.GroupLayout(jPnl_datos);
        jPnl_datos.setLayout(jPnl_datosLayout);
        jPnl_datosLayout.setHorizontalGroup(
            jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl_datosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLbl_fechaNacimiento)
                    .addComponent(jLbl_lugarNacimiento)
                    .addComponent(jLbl_nacionalidad)
                    .addGroup(jPnl_datosLayout.createSequentialGroup()
                        .addComponent(jLbl_imagen_empadronado)
                        .addGap(10, 10, 10)
                        .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLbl_dirección)
                            .addComponent(jLbl_apellidos)
                            .addComponent(jLbl_nombres))))
                .addGap(18, 18, 18)
                .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnl_datosLayout.createSequentialGroup()
                        .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTxFld_nacionalidad, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                            .addGroup(jPnl_datosLayout.createSequentialGroup()
                                .addComponent(jCmbBx_año_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCmbBx_mes_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCmbBx_dia_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCmbBx_lugarNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLbl_codigo)
                            .addComponent(jLbl_estadoCivil)
                            .addComponent(jLbl_sexo))
                        .addGap(18, 18, 18)
                        .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCmbBx_estadoCivil, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTxFld_codigo, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                            .addGroup(jPnl_datosLayout.createSequentialGroup()
                                .addComponent(F, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(M))))
                    .addComponent(jTxFld_nombres, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .addComponent(jTxFld_dirección, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .addComponent(jTxFld_apellidos, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPnl_datosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTxFld_codigo, jTxFld_nacionalidad});

        jPnl_datosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jCmbBx_dia_nacimiento, jCmbBx_mes_nacimiento});

        jPnl_datosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTxFld_apellidos, jTxFld_dirección, jTxFld_nombres});

        jPnl_datosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {F, M});

        jPnl_datosLayout.setVerticalGroup(
            jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnl_datosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPnl_datosLayout.createSequentialGroup()
                        .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLbl_nombres)
                            .addComponent(jTxFld_nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLbl_apellidos)
                            .addComponent(jTxFld_apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLbl_dirección)
                            .addComponent(jTxFld_dirección, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLbl_imagen_empadronado))
                .addGap(21, 21, 21)
                .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnl_datosLayout.createSequentialGroup()
                        .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLbl_fechaNacimiento)
                            .addComponent(jCmbBx_año_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCmbBx_mes_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCmbBx_dia_nacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLbl_lugarNacimiento)
                            .addComponent(jCmbBx_lugarNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLbl_nacionalidad)
                            .addComponent(jTxFld_nacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPnl_datosLayout.createSequentialGroup()
                        .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLbl_codigo)
                            .addComponent(jTxFld_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLbl_estadoCivil)
                            .addComponent(jCmbBx_estadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPnl_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLbl_sexo)
                            .addComponent(F)
                            .addComponent(M))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPnl_datosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTxFld_codigo, jTxFld_nacionalidad});

        jPnl_datosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTxFld_apellidos, jTxFld_dirección, jTxFld_nombres});

        jPnl_datosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jCmbBx_año_nacimiento, jCmbBx_dia_nacimiento, jCmbBx_mes_nacimiento});

        jPnl_datosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {F, M});

        jTxFld_ingresoCI.setName("jTxFld_ingresoCI"); // NOI18N
        jTxFld_ingresoCI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTxFld_ingresoCIKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLbl_ingresoCI)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTxFld_ingresoCI, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLbl_reloj, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(jBtn_buscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtn_guardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtn_ir_editar))
                    .addComponent(jPnl_datos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLbl_titulo_ConsultaEmpadronado)
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLbl_titulo_ConsultaEmpadronado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbl_ingresoCI)
                    .addComponent(jTxFld_ingresoCI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn_buscar)
                    .addComponent(jBtn_guardar)
                    .addComponent(jBtn_ir_editar))
                .addGap(37, 37, 37)
                .addComponent(jPnl_datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(82, Short.MAX_VALUE)
                .addComponent(jLbl_reloj, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(280, 280, 280))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jBtn_buscar, jBtn_guardar, jBtn_ir_editar});

        pack();
    }// </editor-fold>//GEN-END:initComponents
     
    private void jBtn_buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_buscarMouseClicked
        // TODO add your handling code here:
        String A="MASCULINO";//asigna genero masculino
        String A1="FEMENINO";//asigna genero femenino
        buscar busempa = new buscar("empa.txt");//llamada a clase buscar
        String datos = busempa.BuscarDatos(jTxFld_ingresoCI.getText().toString());//llamada a metodo BuscarDatos de clase buscar //verifica que exista la cedula ingresada este fichero
        if (datos.equals("")){//si dato no es encontrado
            JOptionPane.showMessageDialog(null,"CEDULA INCORRECTA O NO ESTA EMPADRONADO","ERROR",0);//mensaje de error que avisa que no existe
            this.jPnl_datos.setVisible(false);//desabilita jPnl_datos
        } 
        else
        {

            this.jPnl_datos.setVisible(true);//se habilita jPnl_datos
            JOptionPane.showMessageDialog(null,"Registro encontrado","EXITO",1);//mensaje cuando encuentre cedula ingresada
            jBtn_guardar.setEnabled(true);
            StringTokenizer tok = new StringTokenizer(datos,"\t");//metodo para saltar espacios en blanco y tomar el siguiente dato del fichero
            tok.nextToken();//hace un salto al siguiente dato del fichero
            String codigo = tok.nextToken().toString();//guarda codigo de empadronado
            String nombre = tok.nextToken().toString();//guarda nombre de empadronado
            String apellido = tok.nextToken().toString();//guarda apellido de empadronado
            String direccion = tok.nextToken().toString();//guarda direccion de empadronado
            String lugarnacimiento = tok.nextToken().toString();//guarda lugar de nacimiento de empadronado
            String estadocivil = tok.nextToken().toString();//guarda estado civil de empadronado
            String sexo = tok.nextToken().toString();//guarda sexo de empadronado
            String dia = tok.nextToken().toString();////guarda dia de empadronado
            String mes = tok.nextToken().toString();//guarda mes de empadronado
            String anio = tok.nextToken().toString();//guarda año de empadronado
            String nacionalidad = tok.nextToken().toString();//guarda nacionalidad de empadronado
            jTxFld_codigo.setText(codigo);//muestra codigo de empadronado
            jTxFld_nombres.setText( nombre);//muestra nombre de empadronado
            jTxFld_apellidos.setText(apellido);//muestra apellido de empadronado
            jTxFld_dirección.setText(direccion);//muestra direccion de empadronado
            jCmbBx_año_nacimiento.addItem(anio);//muestra año de empadronado
            jCmbBx_mes_nacimiento.addItem(mes);//muestra mes de empadronado
            jCmbBx_dia_nacimiento.addItem(dia);//muestra dia de empadronado
            jCmbBx_lugarNacimiento.addItem(lugarnacimiento);//muestra lugar de nacimiento de empadronado
            jTxFld_nacionalidad.setText(nacionalidad);//muestra nacionalidad de empadronado
             jCmbBx_estadoCivil.addItem(estadocivil);//muestra estado civil de empadronado
            //asignamos el valor de genero del empadronamiento en A y A1 y luego comparamos con el dato del empadronado
            if(A1.equals(sexo))//si el valor de A1 es igual al valor de sexo del empadronado
            {
                F.setSelected(true);//selecciona el genero femenino
            }
            if(A.equals(sexo))//si el valor de A es igual al valor de sexo del fichero
            {
                M.setSelected(true);//selecciona el genero masculino
            }

           
           }
    }//GEN-LAST:event_jBtn_buscarMouseClicked
    
    
    private void jBtn_ir_editarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_ir_editarMouseClicked
        // TODO add your handling code here:
                    editar ir = new editar();// crea objeto para ir a nueva ventana
                    this.setVisible(false);//oculta la ventana actual
                    ir.setVisible(true);//muestra la nueva ventana
                    ir.setLocationRelativeTo(null);// para que la ventana este siempre centrada
    }//GEN-LAST:event_jBtn_ir_editarMouseClicked

    private void jBtn_guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_guardarMouseClicked
        try {
            // TODO add your handling code here:
            File archivo = null;
            FileReader fr = null;
            BufferedReader br = null;
            archivo = new File("empa.txt");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            String posicionesvector = "";
            int num_posiciones = 0;
            while ((posicionesvector = br.readLine()) != null) //guarda el contenido de cada linea de fichero hasta el final y guarda en linea
            {
                num_posiciones++;
            }
            String ince=jTxFld_ingresoCI.getText();
            String[] datos = new String[num_posiciones];
            File archivo1 = null;
            FileReader fr1 = null;
            BufferedReader br1 = null;
            archivo1 = new File("empa.txt");
            fr1 = new FileReader(archivo1);
            br1 = new BufferedReader(fr1);
            // Lectura del fichero
            String linea;
            int i = 0;
            while ((linea = br1.readLine()) != null) //guarda el contenido de cada linea de fichero hasta el final y guarda en linea
            {
                datos[i] = linea;
                i++;
                
            }
            
//            Cambio
            File archivo2 = null;
            FileReader fr2 = null;
            BufferedReader br2 = null;
            archivo2 = new File("empa.txt");
            fr2 = new FileReader(archivo2);
            br2 = new BufferedReader(fr2);
            String lineaeditar ;int y=-1;
            while ((lineaeditar = br2.readLine()) != null) //guarda el contenido de cada linea de fichero hasta el final y guarda en linea
            {
                StringTokenizer tok = new StringTokenizer(lineaeditar); //codigo para poder leer cada dato de empadronado
                    String cedulaa = tok.nextToken().toString(); //guarda cedula de fichero
                    y++;
                    if (ince.equals(cedulaa))
                    {
                         String genero = ""; //variable para guardar genero de persona
                        if (M.isSelected() == true) {
                            //para asignar genero masculino
                            genero = "MASCULINO"; //para asignar genero masculino
                        }
                        if (F.isSelected() == true) {
                            //para verificar si el genero seleccionado es femenino
                            genero = "FEMENINO"; //para asignar genero femenino
                        }
                          persona empa = new persona(jTxFld_nombres.getText().toString(), jTxFld_apellidos.getText().toString(), jTxFld_ingresoCI.getText().toString(), jTxFld_codigo.getText(), jTxFld_dirección.getText().toString(), jTxFld_nacionalidad.getText().toString(), jCmbBx_año_nacimiento.getSelectedItem().toString(), jCmbBx_mes_nacimiento.getSelectedItem().toString(), jCmbBx_dia_nacimiento.getSelectedItem().toString(), jCmbBx_lugarNacimiento.getSelectedItem().toString(), jCmbBx_estadoCivil.getSelectedItem().toString(), genero);//guarda datos de empadronado
                            //codigo para verificar si esta empadronado en (registro)
                          String datos1 = empa.datospersona();//guarda en datos para poder guardar en fichero
                          datos[y] = datos1;
                }
            }
            FileWriter fstream = new FileWriter("empa.txt");
            BufferedWriter out = new BufferedWriter(fstream);
            for (int k = 0; k <=0; k++) {
                out.write("");
            }
            out.close();


           for (int k = 0; k < datos.length; k++)
           {
               File entrada = new File("empa.txt");//abre fichero
               FileWriter fw = new FileWriter(entrada, true);//habilita metodo para poder escribir
               PrintWriter pw = new PrintWriter(fw);
               pw.println(datos[k]);//escribe en fichero
               pw.close();//cierra fichero
               
            }
            jTxFld_ingresoCI.setText("");
            this.jPnl_datos.setVisible(false);//desabilita jPnl_datos
            JOptionPane.showMessageDialog(null,"   SUS DATOS HAN SIDO MODIFICADOS\n  CORRECTAMENTE", " EXITO",1);
            jBtn_guardar.setEnabled(false);

        } catch (IOException ex) {
            Logger.getLogger(lista_votantes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtn_guardarMouseClicked

    private void jBtn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_guardarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtn_guardarActionPerformed

    private void jCmbBx_mes_nacimientoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCmbBx_mes_nacimientoMouseClicked
        // TODO add your handling code here:

        
    }//GEN-LAST:event_jCmbBx_mes_nacimientoMouseClicked

    private void jCmbBx_año_nacimientoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCmbBx_año_nacimientoMouseClicked
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jCmbBx_año_nacimientoMouseClicked

    private void jCmbBx_año_nacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBx_año_nacimientoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCmbBx_año_nacimientoActionPerformed

    private void jCmbBx_mes_nacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBx_mes_nacimientoActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jCmbBx_mes_nacimientoActionPerformed

    private void jCmbBx_año_nacimientoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCmbBx_año_nacimientoMouseReleased
        // TODO add your handling code here:
        jCmbBx_año_nacimiento.removeAllItems();
        for (int i = 1940; i <= 2011; i++) {
            jCmbBx_año_nacimiento.addItem(i);//añade datos de mes en jCmbBx_mes_nacimiento
        }
    }//GEN-LAST:event_jCmbBx_año_nacimientoMouseReleased

    private void jCmbBx_mes_nacimientoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCmbBx_mes_nacimientoMouseReleased
        // TODO add your handling code here:
          jCmbBx_mes_nacimiento.removeAllItems();//limpia datos de dia en jCmbBx_dia_nacimiento
        for (int i = 1; i <= 12; i++) {
            jCmbBx_mes_nacimiento.addItem(i);//añade datos de mes en jCmbBx_mes_nacimiento
        }
        int anio = Integer.parseInt(jCmbBx_año_nacimiento.getSelectedItem().toString());//convierte a entero dato de año seleccionado

                if ((anio % 4 == 0) && ((anio % 100 != 0) || (anio % 400 == 0))) {//verifica si el año es bisiesto
                    jCmbBx_dia_nacimiento.removeAllItems();//limpia datos de dia en jCmbBx_dia_nacimiento
                    int mes = Integer.parseInt(jCmbBx_mes_nacimiento.getSelectedItem().toString());//añade datos de mes en  jCmbBx_mes_nacimiento

                    if (mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12)
                    {//para mostrar datos de meses que tienen 31 dias
                        for (int i = 1; i <= 31; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 4 || mes == 6 || mes == 9 || mes == 11)
                    {//para mostrar datos de meses que tienen 30 dias
                        for (int i = 1; i <= 30; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 2) {//si el año es bisiesto febrero tiene 29 dias
                        for (int i = 1; i <= 29; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                } else {
                    int mes = Integer.parseInt(jCmbBx_mes_nacimiento.getSelectedItem().toString());//añade datos de mes en  jCmbBx_mes_nacimiento
                    if (mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12)
                    {//añade datos de dia en  jCmbBx_dia_nacimiento
                        for (int i = 1; i <= 31; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 4 || mes == 6 || mes == 9 || mes == 11)
                    {//para mostrar datos de meses que tienen 30 dias
                        for (int i = 1; i <= 30; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 2) {//si el año es bisiesto febrero tiene 28 dias
                        for (int i = 1; i <= 28; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                }
    }//GEN-LAST:event_jCmbBx_mes_nacimientoMouseReleased

    private void jCmbBx_dia_nacimientoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCmbBx_dia_nacimientoMouseReleased
        // TODO add your handling code here:
        int anio = Integer.parseInt(jCmbBx_año_nacimiento.getSelectedItem().toString());//convierte a entero dato de año seleccionado

                if ((anio % 4 == 0) && ((anio % 100 != 0) || (anio % 400 == 0))) {//verifica si el año es bisiesto
                    jCmbBx_dia_nacimiento.removeAllItems();//limpia datos de dia en jCmbBx_dia_nacimiento
                    int mes = Integer.parseInt(jCmbBx_mes_nacimiento.getSelectedItem().toString());//añade datos de mes en  jCmbBx_mes_nacimiento

                    if (mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12)
                    {//para mostrar datos de meses que tienen 31 dias
                        for (int i = 1; i <= 31; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 4 || mes == 6 || mes == 9 || mes == 11)
                    {//para mostrar datos de meses que tienen 30 dias
                        for (int i = 1; i <= 30; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 2) {//si el año es bisiesto febrero tiene 29 dias
                        for (int i = 1; i <= 29; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                } else {
                    int mes = Integer.parseInt(jCmbBx_mes_nacimiento.getSelectedItem().toString());//añade datos de mes en  jCmbBx_mes_nacimiento
                    if (mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12)
                    {//añade datos de dia en  jCmbBx_dia_nacimiento
                        for (int i = 1; i <= 31; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 4 || mes == 6 || mes == 9 || mes == 11)
                    {//para mostrar datos de meses que tienen 30 dias
                        for (int i = 1; i <= 30; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                    if (mes == 2) {//si el año es bisiesto febrero tiene 28 dias
                        for (int i = 1; i <= 28; i++)
                        {
                            jCmbBx_dia_nacimiento.addItem(i);//añade datos de dia en  jCmbBx_dia_nacimiento
                        }
                    }
                }
    }//GEN-LAST:event_jCmbBx_dia_nacimientoMouseReleased

    private void jCmbBx_lugarNacimientoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCmbBx_lugarNacimientoMouseReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_jCmbBx_lugarNacimientoMouseReleased

    private void jCmbBx_estadoCivilMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCmbBx_estadoCivilMouseReleased
        // TODO add your handling code here:
        jCmbBx_estadoCivil.removeAllItems();
        for(int i=0;i<ECivil.length;i++)
        {
            jCmbBx_estadoCivil.addItem(ECivil[i]);
        }
    }//GEN-LAST:event_jCmbBx_estadoCivilMouseReleased

    private void jBtn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_buscarActionPerformed
        // TODO add your handling code here
    }//GEN-LAST:event_jBtn_buscarActionPerformed

    private void jTxFld_ingresoCIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxFld_ingresoCIKeyPressed
        // TODO add your handling code here:
        String str = jTxFld_ingresoCI.getText();//guarda cedula ingresada
        boolean resultado = str.startsWith("-");//ayuda para que ingrese numeros validos y no ingrese numeros negativos
        if (resultado == true) {//verifica si ingresa numeros negativos
            JOptionPane.showMessageDialog(null, "Ingrese una cantidad valida");//mensaje de aviso que el numero ingresado no es valido
            jTxFld_ingresoCI.setText("");//limpia casilla de ingreso de cedula
        }

        if (!jTxFld_ingresoCI.getText().equals("")) {//verifica si ingreso algun valor en el casillero de cedula
            try {
                int ci = Integer.parseInt(jTxFld_ingresoCI.getText());//convierte a entero la cedula de identidad ingresada
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Solo se pueden ingresar numeros");//mensaje si no se ingreso numeros
                jTxFld_ingresoCI.setText("");//limpia casilla de ingreso de cedula
            }
        }
    }//GEN-LAST:event_jTxFld_ingresoCIKeyPressed

    /**
    * @param args the command line arguments
    */

//          public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//
//                    new // <editor-fold defaultstate="collapsed" desc="comment">
//                            lista_votantes// </editor-fold>
//().setVisible(true); // clase principal
//
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton F;
    private javax.swing.ButtonGroup GRUPO1;
    private javax.swing.JRadioButton M;
    private javax.swing.JButton jBtn_buscar;
    private javax.swing.JButton jBtn_guardar;
    private javax.swing.JButton jBtn_ir_editar;
    private javax.swing.JComboBox jCmbBx_año_nacimiento;
    private javax.swing.JComboBox jCmbBx_dia_nacimiento;
    private javax.swing.JComboBox jCmbBx_estadoCivil;
    private javax.swing.JComboBox jCmbBx_lugarNacimiento;
    private javax.swing.JComboBox jCmbBx_mes_nacimiento;
    private javax.swing.JLabel jLbl_apellidos;
    private javax.swing.JLabel jLbl_codigo;
    private javax.swing.JLabel jLbl_dirección;
    private javax.swing.JLabel jLbl_estadoCivil;
    private javax.swing.JLabel jLbl_fechaNacimiento;
    private javax.swing.JLabel jLbl_imagen_empadronado;
    private javax.swing.JLabel jLbl_ingresoCI;
    private javax.swing.JLabel jLbl_lugarNacimiento;
    private javax.swing.JLabel jLbl_nacionalidad;
    private javax.swing.JLabel jLbl_nombres;
    private javax.swing.JLabel jLbl_reloj;
    private javax.swing.JLabel jLbl_sexo;
    private javax.swing.JLabel jLbl_titulo_ConsultaEmpadronado;
    private javax.swing.JPanel jPnl_datos;
    private javax.swing.JTextField jTxFld_apellidos;
    private javax.swing.JTextField jTxFld_codigo;
    private javax.swing.JTextField jTxFld_dirección;
    private javax.swing.JTextField jTxFld_ingresoCI;
    private javax.swing.JTextField jTxFld_nacionalidad;
    private javax.swing.JTextField jTxFld_nombres;
    // End of variables declaration//GEN-END:variables

}
